return {
  -- {
  --   "olimorris/codecompanion.nvim",
  --   event = "VeryLazy",
  --   dependencies = {
  --     "nvim-lua/plenary.nvim",
  --     "nvim-treesitter/nvim-treesitter",
  --   },
  --   keys = {
  --     { "<leader>ac", mode = { "n", "v" }, "<CMD>CodeCompanionChat<CR>", desc = "Copilot [C]hat" },
  --   },
  --   opts = {
  --     strategies = {
  --       chat = {
  --         adapter = "copilot",
  --         slash_commands = {
  --           ["file"] = {
  --             callback = "strategies.chat.slash_commands.file",
  --             description = "Select a file using Telescope",
  --             opts = {
  --               provider = "telescope", -- Other options include 'default', 'mini_pick', 'fzf_lua', snacks
  --               contains_code = true,
  --             },
  --           },
  --         },
  --       },
  --       inline = {
  --         adapter = "copilot",
  --         keymaps = {
  --           accept_change = {
  --             modes = { n = "ga" },
  --             description = "Accept the suggested change",
  --           },
  --           reject_change = {
  --             modes = { n = "gr" },
  --             description = "Reject the suggested change",
  --           },
  --         },
  --       },
  --     },
  --     opts = {
  --       log_level = "INFO",
  --     },
  --   },
  -- },
  -- keys = {
  --   { "<leader>vt", mode = { "n", "v" }, "<CMD>CopilotChatTests<CR>", desc = "Copilot [T]ests" },
  --   { "<leader>vo", mode = { "n", "v" }, "<CMD>CopilotChatOptimize<CR>", desc = "Copilot [O]ptimize" },
  --   { "<leader>vf", mode = { "n", "v" }, "<CMD>CopilotChatFix<CR>", desc = "Copilot [F]ix Bugs" },
  --   { "<leader>vg", mode = { "n", "v" }, "<CMD>CopilotChatFixDiagnostic<CR>", desc = "Copilot fix Dia[g]nostic" },
  --   { "<leader>vd", mode = { "n", "v" }, "<CMD>CopilotChatDocs<CR>", desc = "Copilot [D]ocs" },
  --   { "<leader>vx", mode = { "n", "v" }, "<CMD>CopilotChatExplain<CR>", desc = "Copilot E[x]plain" },
  -- },
}
